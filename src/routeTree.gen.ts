/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as HrIndexRouteImport } from './routes/hr/index'
import { Route as CoverageIndexRouteImport } from './routes/coverage/index'
import { Route as MenuSchedulesRouteRouteImport } from './routes/menu/schedules/route'
import { Route as MenuIngredientsRouteRouteImport } from './routes/menu/ingredients/route'
import { Route as MenuDishesRouteRouteImport } from './routes/menu/dishes/route'
import { Route as MenuCyclesRouteRouteImport } from './routes/menu/cycles/route'
import { Route as CoverageTownsRouteRouteImport } from './routes/coverage/towns/route'
import { Route as CoverageInstitutionsRouteRouteImport } from './routes/coverage/institutions/route'
import { Route as CoverageDepartmentsRouteRouteImport } from './routes/coverage/departments/route'
import { Route as CoverageCoveragesRouteRouteImport } from './routes/coverage/coverages/route'
import { Route as CoverageCampusesRouteRouteImport } from './routes/coverage/campuses/route'
import { Route as CoverageBeneficiariesRouteRouteImport } from './routes/coverage/beneficiaries/route'
import { Route as MenuSchedulesIndexRouteImport } from './routes/menu/schedules/index'
import { Route as MenuIngredientsIndexRouteImport } from './routes/menu/ingredients/index'
import { Route as MenuDishesIndexRouteImport } from './routes/menu/dishes/index'
import { Route as MenuCyclesIndexRouteImport } from './routes/menu/cycles/index'
import { Route as HrEmployeesIndexRouteImport } from './routes/hr/employees/index'
import { Route as HrDailyAvailabilityIndexRouteImport } from './routes/hr/daily-availability/index'
import { Route as CoverageTownsIndexRouteImport } from './routes/coverage/towns/index'
import { Route as CoverageInstitutionsIndexRouteImport } from './routes/coverage/institutions/index'
import { Route as CoverageDepartmentsIndexRouteImport } from './routes/coverage/departments/index'
import { Route as CoverageCoveragesIndexRouteImport } from './routes/coverage/coverages/index'
import { Route as CoverageCampusesIndexRouteImport } from './routes/coverage/campuses/index'
import { Route as CoverageBeneficiariesIndexRouteImport } from './routes/coverage/beneficiaries/index'
import { Route as CoverageCoveragesCampusIdRouteImport } from './routes/coverage/coverages/$campusId'
import { Route as CoverageTownsTownIdInstitutionsRouteImport } from './routes/coverage/towns/$townId/institutions'
import { Route as CoverageInstitutionsInstitutionIdCampusesRouteImport } from './routes/coverage/institutions/$institutionId/campuses'
import { Route as CoverageDepartmentsDepartmentIdTownsRouteImport } from './routes/coverage/departments/$departmentId/towns'
import { Route as CoverageCampusesCampusIdSummaryRouteImport } from './routes/coverage/campuses/$campusId/summary'

const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const HrIndexRoute = HrIndexRouteImport.update({
  id: '/hr/',
  path: '/hr/',
  getParentRoute: () => rootRouteImport,
} as any)
const CoverageIndexRoute = CoverageIndexRouteImport.update({
  id: '/coverage/',
  path: '/coverage/',
  getParentRoute: () => rootRouteImport,
} as any)
const MenuSchedulesRouteRoute = MenuSchedulesRouteRouteImport.update({
  id: '/menu/schedules',
  path: '/menu/schedules',
  getParentRoute: () => rootRouteImport,
} as any)
const MenuIngredientsRouteRoute = MenuIngredientsRouteRouteImport.update({
  id: '/menu/ingredients',
  path: '/menu/ingredients',
  getParentRoute: () => rootRouteImport,
} as any)
const MenuDishesRouteRoute = MenuDishesRouteRouteImport.update({
  id: '/menu/dishes',
  path: '/menu/dishes',
  getParentRoute: () => rootRouteImport,
} as any)
const MenuCyclesRouteRoute = MenuCyclesRouteRouteImport.update({
  id: '/menu/cycles',
  path: '/menu/cycles',
  getParentRoute: () => rootRouteImport,
} as any)
const CoverageTownsRouteRoute = CoverageTownsRouteRouteImport.update({
  id: '/coverage/towns',
  path: '/coverage/towns',
  getParentRoute: () => rootRouteImport,
} as any)
const CoverageInstitutionsRouteRoute =
  CoverageInstitutionsRouteRouteImport.update({
    id: '/coverage/institutions',
    path: '/coverage/institutions',
    getParentRoute: () => rootRouteImport,
  } as any)
const CoverageDepartmentsRouteRoute =
  CoverageDepartmentsRouteRouteImport.update({
    id: '/coverage/departments',
    path: '/coverage/departments',
    getParentRoute: () => rootRouteImport,
  } as any)
const CoverageCoveragesRouteRoute = CoverageCoveragesRouteRouteImport.update({
  id: '/coverage/coverages',
  path: '/coverage/coverages',
  getParentRoute: () => rootRouteImport,
} as any)
const CoverageCampusesRouteRoute = CoverageCampusesRouteRouteImport.update({
  id: '/coverage/campuses',
  path: '/coverage/campuses',
  getParentRoute: () => rootRouteImport,
} as any)
const CoverageBeneficiariesRouteRoute =
  CoverageBeneficiariesRouteRouteImport.update({
    id: '/coverage/beneficiaries',
    path: '/coverage/beneficiaries',
    getParentRoute: () => rootRouteImport,
  } as any)
const MenuSchedulesIndexRoute = MenuSchedulesIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MenuSchedulesRouteRoute,
} as any)
const MenuIngredientsIndexRoute = MenuIngredientsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MenuIngredientsRouteRoute,
} as any)
const MenuDishesIndexRoute = MenuDishesIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MenuDishesRouteRoute,
} as any)
const MenuCyclesIndexRoute = MenuCyclesIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MenuCyclesRouteRoute,
} as any)
const HrEmployeesIndexRoute = HrEmployeesIndexRouteImport.update({
  id: '/hr/employees/',
  path: '/hr/employees/',
  getParentRoute: () => rootRouteImport,
} as any)
const HrDailyAvailabilityIndexRoute =
  HrDailyAvailabilityIndexRouteImport.update({
    id: '/hr/daily-availability/',
    path: '/hr/daily-availability/',
    getParentRoute: () => rootRouteImport,
  } as any)
const CoverageTownsIndexRoute = CoverageTownsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => CoverageTownsRouteRoute,
} as any)
const CoverageInstitutionsIndexRoute =
  CoverageInstitutionsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => CoverageInstitutionsRouteRoute,
  } as any)
const CoverageDepartmentsIndexRoute =
  CoverageDepartmentsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => CoverageDepartmentsRouteRoute,
  } as any)
const CoverageCoveragesIndexRoute = CoverageCoveragesIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => CoverageCoveragesRouteRoute,
} as any)
const CoverageCampusesIndexRoute = CoverageCampusesIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => CoverageCampusesRouteRoute,
} as any)
const CoverageBeneficiariesIndexRoute =
  CoverageBeneficiariesIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => CoverageBeneficiariesRouteRoute,
  } as any)
const CoverageCoveragesCampusIdRoute =
  CoverageCoveragesCampusIdRouteImport.update({
    id: '/$campusId',
    path: '/$campusId',
    getParentRoute: () => CoverageCoveragesRouteRoute,
  } as any)
const CoverageTownsTownIdInstitutionsRoute =
  CoverageTownsTownIdInstitutionsRouteImport.update({
    id: '/$townId/institutions',
    path: '/$townId/institutions',
    getParentRoute: () => CoverageTownsRouteRoute,
  } as any)
const CoverageInstitutionsInstitutionIdCampusesRoute =
  CoverageInstitutionsInstitutionIdCampusesRouteImport.update({
    id: '/$institutionId/campuses',
    path: '/$institutionId/campuses',
    getParentRoute: () => CoverageInstitutionsRouteRoute,
  } as any)
const CoverageDepartmentsDepartmentIdTownsRoute =
  CoverageDepartmentsDepartmentIdTownsRouteImport.update({
    id: '/$departmentId/towns',
    path: '/$departmentId/towns',
    getParentRoute: () => CoverageDepartmentsRouteRoute,
  } as any)
const CoverageCampusesCampusIdSummaryRoute =
  CoverageCampusesCampusIdSummaryRouteImport.update({
    id: '/$campusId/summary',
    path: '/$campusId/summary',
    getParentRoute: () => CoverageCampusesRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/coverage/beneficiaries': typeof CoverageBeneficiariesRouteRouteWithChildren
  '/coverage/campuses': typeof CoverageCampusesRouteRouteWithChildren
  '/coverage/coverages': typeof CoverageCoveragesRouteRouteWithChildren
  '/coverage/departments': typeof CoverageDepartmentsRouteRouteWithChildren
  '/coverage/institutions': typeof CoverageInstitutionsRouteRouteWithChildren
  '/coverage/towns': typeof CoverageTownsRouteRouteWithChildren
  '/menu/cycles': typeof MenuCyclesRouteRouteWithChildren
  '/menu/dishes': typeof MenuDishesRouteRouteWithChildren
  '/menu/ingredients': typeof MenuIngredientsRouteRouteWithChildren
  '/menu/schedules': typeof MenuSchedulesRouteRouteWithChildren
  '/coverage': typeof CoverageIndexRoute
  '/hr': typeof HrIndexRoute
  '/coverage/coverages/$campusId': typeof CoverageCoveragesCampusIdRoute
  '/coverage/beneficiaries/': typeof CoverageBeneficiariesIndexRoute
  '/coverage/campuses/': typeof CoverageCampusesIndexRoute
  '/coverage/coverages/': typeof CoverageCoveragesIndexRoute
  '/coverage/departments/': typeof CoverageDepartmentsIndexRoute
  '/coverage/institutions/': typeof CoverageInstitutionsIndexRoute
  '/coverage/towns/': typeof CoverageTownsIndexRoute
  '/hr/daily-availability': typeof HrDailyAvailabilityIndexRoute
  '/hr/employees': typeof HrEmployeesIndexRoute
  '/menu/cycles/': typeof MenuCyclesIndexRoute
  '/menu/dishes/': typeof MenuDishesIndexRoute
  '/menu/ingredients/': typeof MenuIngredientsIndexRoute
  '/menu/schedules/': typeof MenuSchedulesIndexRoute
  '/coverage/campuses/$campusId/summary': typeof CoverageCampusesCampusIdSummaryRoute
  '/coverage/departments/$departmentId/towns': typeof CoverageDepartmentsDepartmentIdTownsRoute
  '/coverage/institutions/$institutionId/campuses': typeof CoverageInstitutionsInstitutionIdCampusesRoute
  '/coverage/towns/$townId/institutions': typeof CoverageTownsTownIdInstitutionsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/coverage': typeof CoverageIndexRoute
  '/hr': typeof HrIndexRoute
  '/coverage/coverages/$campusId': typeof CoverageCoveragesCampusIdRoute
  '/coverage/beneficiaries': typeof CoverageBeneficiariesIndexRoute
  '/coverage/campuses': typeof CoverageCampusesIndexRoute
  '/coverage/coverages': typeof CoverageCoveragesIndexRoute
  '/coverage/departments': typeof CoverageDepartmentsIndexRoute
  '/coverage/institutions': typeof CoverageInstitutionsIndexRoute
  '/coverage/towns': typeof CoverageTownsIndexRoute
  '/hr/daily-availability': typeof HrDailyAvailabilityIndexRoute
  '/hr/employees': typeof HrEmployeesIndexRoute
  '/menu/cycles': typeof MenuCyclesIndexRoute
  '/menu/dishes': typeof MenuDishesIndexRoute
  '/menu/ingredients': typeof MenuIngredientsIndexRoute
  '/menu/schedules': typeof MenuSchedulesIndexRoute
  '/coverage/campuses/$campusId/summary': typeof CoverageCampusesCampusIdSummaryRoute
  '/coverage/departments/$departmentId/towns': typeof CoverageDepartmentsDepartmentIdTownsRoute
  '/coverage/institutions/$institutionId/campuses': typeof CoverageInstitutionsInstitutionIdCampusesRoute
  '/coverage/towns/$townId/institutions': typeof CoverageTownsTownIdInstitutionsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/coverage/beneficiaries': typeof CoverageBeneficiariesRouteRouteWithChildren
  '/coverage/campuses': typeof CoverageCampusesRouteRouteWithChildren
  '/coverage/coverages': typeof CoverageCoveragesRouteRouteWithChildren
  '/coverage/departments': typeof CoverageDepartmentsRouteRouteWithChildren
  '/coverage/institutions': typeof CoverageInstitutionsRouteRouteWithChildren
  '/coverage/towns': typeof CoverageTownsRouteRouteWithChildren
  '/menu/cycles': typeof MenuCyclesRouteRouteWithChildren
  '/menu/dishes': typeof MenuDishesRouteRouteWithChildren
  '/menu/ingredients': typeof MenuIngredientsRouteRouteWithChildren
  '/menu/schedules': typeof MenuSchedulesRouteRouteWithChildren
  '/coverage/': typeof CoverageIndexRoute
  '/hr/': typeof HrIndexRoute
  '/coverage/coverages/$campusId': typeof CoverageCoveragesCampusIdRoute
  '/coverage/beneficiaries/': typeof CoverageBeneficiariesIndexRoute
  '/coverage/campuses/': typeof CoverageCampusesIndexRoute
  '/coverage/coverages/': typeof CoverageCoveragesIndexRoute
  '/coverage/departments/': typeof CoverageDepartmentsIndexRoute
  '/coverage/institutions/': typeof CoverageInstitutionsIndexRoute
  '/coverage/towns/': typeof CoverageTownsIndexRoute
  '/hr/daily-availability/': typeof HrDailyAvailabilityIndexRoute
  '/hr/employees/': typeof HrEmployeesIndexRoute
  '/menu/cycles/': typeof MenuCyclesIndexRoute
  '/menu/dishes/': typeof MenuDishesIndexRoute
  '/menu/ingredients/': typeof MenuIngredientsIndexRoute
  '/menu/schedules/': typeof MenuSchedulesIndexRoute
  '/coverage/campuses/$campusId/summary': typeof CoverageCampusesCampusIdSummaryRoute
  '/coverage/departments/$departmentId/towns': typeof CoverageDepartmentsDepartmentIdTownsRoute
  '/coverage/institutions/$institutionId/campuses': typeof CoverageInstitutionsInstitutionIdCampusesRoute
  '/coverage/towns/$townId/institutions': typeof CoverageTownsTownIdInstitutionsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/coverage/beneficiaries'
    | '/coverage/campuses'
    | '/coverage/coverages'
    | '/coverage/departments'
    | '/coverage/institutions'
    | '/coverage/towns'
    | '/menu/cycles'
    | '/menu/dishes'
    | '/menu/ingredients'
    | '/menu/schedules'
    | '/coverage'
    | '/hr'
    | '/coverage/coverages/$campusId'
    | '/coverage/beneficiaries/'
    | '/coverage/campuses/'
    | '/coverage/coverages/'
    | '/coverage/departments/'
    | '/coverage/institutions/'
    | '/coverage/towns/'
    | '/hr/daily-availability'
    | '/hr/employees'
    | '/menu/cycles/'
    | '/menu/dishes/'
    | '/menu/ingredients/'
    | '/menu/schedules/'
    | '/coverage/campuses/$campusId/summary'
    | '/coverage/departments/$departmentId/towns'
    | '/coverage/institutions/$institutionId/campuses'
    | '/coverage/towns/$townId/institutions'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/coverage'
    | '/hr'
    | '/coverage/coverages/$campusId'
    | '/coverage/beneficiaries'
    | '/coverage/campuses'
    | '/coverage/coverages'
    | '/coverage/departments'
    | '/coverage/institutions'
    | '/coverage/towns'
    | '/hr/daily-availability'
    | '/hr/employees'
    | '/menu/cycles'
    | '/menu/dishes'
    | '/menu/ingredients'
    | '/menu/schedules'
    | '/coverage/campuses/$campusId/summary'
    | '/coverage/departments/$departmentId/towns'
    | '/coverage/institutions/$institutionId/campuses'
    | '/coverage/towns/$townId/institutions'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/coverage/beneficiaries'
    | '/coverage/campuses'
    | '/coverage/coverages'
    | '/coverage/departments'
    | '/coverage/institutions'
    | '/coverage/towns'
    | '/menu/cycles'
    | '/menu/dishes'
    | '/menu/ingredients'
    | '/menu/schedules'
    | '/coverage/'
    | '/hr/'
    | '/coverage/coverages/$campusId'
    | '/coverage/beneficiaries/'
    | '/coverage/campuses/'
    | '/coverage/coverages/'
    | '/coverage/departments/'
    | '/coverage/institutions/'
    | '/coverage/towns/'
    | '/hr/daily-availability/'
    | '/hr/employees/'
    | '/menu/cycles/'
    | '/menu/dishes/'
    | '/menu/ingredients/'
    | '/menu/schedules/'
    | '/coverage/campuses/$campusId/summary'
    | '/coverage/departments/$departmentId/towns'
    | '/coverage/institutions/$institutionId/campuses'
    | '/coverage/towns/$townId/institutions'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  CoverageBeneficiariesRouteRoute: typeof CoverageBeneficiariesRouteRouteWithChildren
  CoverageCampusesRouteRoute: typeof CoverageCampusesRouteRouteWithChildren
  CoverageCoveragesRouteRoute: typeof CoverageCoveragesRouteRouteWithChildren
  CoverageDepartmentsRouteRoute: typeof CoverageDepartmentsRouteRouteWithChildren
  CoverageInstitutionsRouteRoute: typeof CoverageInstitutionsRouteRouteWithChildren
  CoverageTownsRouteRoute: typeof CoverageTownsRouteRouteWithChildren
  MenuCyclesRouteRoute: typeof MenuCyclesRouteRouteWithChildren
  MenuDishesRouteRoute: typeof MenuDishesRouteRouteWithChildren
  MenuIngredientsRouteRoute: typeof MenuIngredientsRouteRouteWithChildren
  MenuSchedulesRouteRoute: typeof MenuSchedulesRouteRouteWithChildren
  CoverageIndexRoute: typeof CoverageIndexRoute
  HrIndexRoute: typeof HrIndexRoute
  HrDailyAvailabilityIndexRoute: typeof HrDailyAvailabilityIndexRoute
  HrEmployeesIndexRoute: typeof HrEmployeesIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/hr/': {
      id: '/hr/'
      path: '/hr'
      fullPath: '/hr'
      preLoaderRoute: typeof HrIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/coverage/': {
      id: '/coverage/'
      path: '/coverage'
      fullPath: '/coverage'
      preLoaderRoute: typeof CoverageIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/menu/schedules': {
      id: '/menu/schedules'
      path: '/menu/schedules'
      fullPath: '/menu/schedules'
      preLoaderRoute: typeof MenuSchedulesRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/menu/ingredients': {
      id: '/menu/ingredients'
      path: '/menu/ingredients'
      fullPath: '/menu/ingredients'
      preLoaderRoute: typeof MenuIngredientsRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/menu/dishes': {
      id: '/menu/dishes'
      path: '/menu/dishes'
      fullPath: '/menu/dishes'
      preLoaderRoute: typeof MenuDishesRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/menu/cycles': {
      id: '/menu/cycles'
      path: '/menu/cycles'
      fullPath: '/menu/cycles'
      preLoaderRoute: typeof MenuCyclesRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/coverage/towns': {
      id: '/coverage/towns'
      path: '/coverage/towns'
      fullPath: '/coverage/towns'
      preLoaderRoute: typeof CoverageTownsRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/coverage/institutions': {
      id: '/coverage/institutions'
      path: '/coverage/institutions'
      fullPath: '/coverage/institutions'
      preLoaderRoute: typeof CoverageInstitutionsRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/coverage/departments': {
      id: '/coverage/departments'
      path: '/coverage/departments'
      fullPath: '/coverage/departments'
      preLoaderRoute: typeof CoverageDepartmentsRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/coverage/coverages': {
      id: '/coverage/coverages'
      path: '/coverage/coverages'
      fullPath: '/coverage/coverages'
      preLoaderRoute: typeof CoverageCoveragesRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/coverage/campuses': {
      id: '/coverage/campuses'
      path: '/coverage/campuses'
      fullPath: '/coverage/campuses'
      preLoaderRoute: typeof CoverageCampusesRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/coverage/beneficiaries': {
      id: '/coverage/beneficiaries'
      path: '/coverage/beneficiaries'
      fullPath: '/coverage/beneficiaries'
      preLoaderRoute: typeof CoverageBeneficiariesRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/menu/schedules/': {
      id: '/menu/schedules/'
      path: '/'
      fullPath: '/menu/schedules/'
      preLoaderRoute: typeof MenuSchedulesIndexRouteImport
      parentRoute: typeof MenuSchedulesRouteRoute
    }
    '/menu/ingredients/': {
      id: '/menu/ingredients/'
      path: '/'
      fullPath: '/menu/ingredients/'
      preLoaderRoute: typeof MenuIngredientsIndexRouteImport
      parentRoute: typeof MenuIngredientsRouteRoute
    }
    '/menu/dishes/': {
      id: '/menu/dishes/'
      path: '/'
      fullPath: '/menu/dishes/'
      preLoaderRoute: typeof MenuDishesIndexRouteImport
      parentRoute: typeof MenuDishesRouteRoute
    }
    '/menu/cycles/': {
      id: '/menu/cycles/'
      path: '/'
      fullPath: '/menu/cycles/'
      preLoaderRoute: typeof MenuCyclesIndexRouteImport
      parentRoute: typeof MenuCyclesRouteRoute
    }
    '/hr/employees/': {
      id: '/hr/employees/'
      path: '/hr/employees'
      fullPath: '/hr/employees'
      preLoaderRoute: typeof HrEmployeesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/hr/daily-availability/': {
      id: '/hr/daily-availability/'
      path: '/hr/daily-availability'
      fullPath: '/hr/daily-availability'
      preLoaderRoute: typeof HrDailyAvailabilityIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/coverage/towns/': {
      id: '/coverage/towns/'
      path: '/'
      fullPath: '/coverage/towns/'
      preLoaderRoute: typeof CoverageTownsIndexRouteImport
      parentRoute: typeof CoverageTownsRouteRoute
    }
    '/coverage/institutions/': {
      id: '/coverage/institutions/'
      path: '/'
      fullPath: '/coverage/institutions/'
      preLoaderRoute: typeof CoverageInstitutionsIndexRouteImport
      parentRoute: typeof CoverageInstitutionsRouteRoute
    }
    '/coverage/departments/': {
      id: '/coverage/departments/'
      path: '/'
      fullPath: '/coverage/departments/'
      preLoaderRoute: typeof CoverageDepartmentsIndexRouteImport
      parentRoute: typeof CoverageDepartmentsRouteRoute
    }
    '/coverage/coverages/': {
      id: '/coverage/coverages/'
      path: '/'
      fullPath: '/coverage/coverages/'
      preLoaderRoute: typeof CoverageCoveragesIndexRouteImport
      parentRoute: typeof CoverageCoveragesRouteRoute
    }
    '/coverage/campuses/': {
      id: '/coverage/campuses/'
      path: '/'
      fullPath: '/coverage/campuses/'
      preLoaderRoute: typeof CoverageCampusesIndexRouteImport
      parentRoute: typeof CoverageCampusesRouteRoute
    }
    '/coverage/beneficiaries/': {
      id: '/coverage/beneficiaries/'
      path: '/'
      fullPath: '/coverage/beneficiaries/'
      preLoaderRoute: typeof CoverageBeneficiariesIndexRouteImport
      parentRoute: typeof CoverageBeneficiariesRouteRoute
    }
    '/coverage/coverages/$campusId': {
      id: '/coverage/coverages/$campusId'
      path: '/$campusId'
      fullPath: '/coverage/coverages/$campusId'
      preLoaderRoute: typeof CoverageCoveragesCampusIdRouteImport
      parentRoute: typeof CoverageCoveragesRouteRoute
    }
    '/coverage/towns/$townId/institutions': {
      id: '/coverage/towns/$townId/institutions'
      path: '/$townId/institutions'
      fullPath: '/coverage/towns/$townId/institutions'
      preLoaderRoute: typeof CoverageTownsTownIdInstitutionsRouteImport
      parentRoute: typeof CoverageTownsRouteRoute
    }
    '/coverage/institutions/$institutionId/campuses': {
      id: '/coverage/institutions/$institutionId/campuses'
      path: '/$institutionId/campuses'
      fullPath: '/coverage/institutions/$institutionId/campuses'
      preLoaderRoute: typeof CoverageInstitutionsInstitutionIdCampusesRouteImport
      parentRoute: typeof CoverageInstitutionsRouteRoute
    }
    '/coverage/departments/$departmentId/towns': {
      id: '/coverage/departments/$departmentId/towns'
      path: '/$departmentId/towns'
      fullPath: '/coverage/departments/$departmentId/towns'
      preLoaderRoute: typeof CoverageDepartmentsDepartmentIdTownsRouteImport
      parentRoute: typeof CoverageDepartmentsRouteRoute
    }
    '/coverage/campuses/$campusId/summary': {
      id: '/coverage/campuses/$campusId/summary'
      path: '/$campusId/summary'
      fullPath: '/coverage/campuses/$campusId/summary'
      preLoaderRoute: typeof CoverageCampusesCampusIdSummaryRouteImport
      parentRoute: typeof CoverageCampusesRouteRoute
    }
  }
}

interface CoverageBeneficiariesRouteRouteChildren {
  CoverageBeneficiariesIndexRoute: typeof CoverageBeneficiariesIndexRoute
}

const CoverageBeneficiariesRouteRouteChildren: CoverageBeneficiariesRouteRouteChildren =
  {
    CoverageBeneficiariesIndexRoute: CoverageBeneficiariesIndexRoute,
  }

const CoverageBeneficiariesRouteRouteWithChildren =
  CoverageBeneficiariesRouteRoute._addFileChildren(
    CoverageBeneficiariesRouteRouteChildren,
  )

interface CoverageCampusesRouteRouteChildren {
  CoverageCampusesIndexRoute: typeof CoverageCampusesIndexRoute
  CoverageCampusesCampusIdSummaryRoute: typeof CoverageCampusesCampusIdSummaryRoute
}

const CoverageCampusesRouteRouteChildren: CoverageCampusesRouteRouteChildren = {
  CoverageCampusesIndexRoute: CoverageCampusesIndexRoute,
  CoverageCampusesCampusIdSummaryRoute: CoverageCampusesCampusIdSummaryRoute,
}

const CoverageCampusesRouteRouteWithChildren =
  CoverageCampusesRouteRoute._addFileChildren(
    CoverageCampusesRouteRouteChildren,
  )

interface CoverageCoveragesRouteRouteChildren {
  CoverageCoveragesCampusIdRoute: typeof CoverageCoveragesCampusIdRoute
  CoverageCoveragesIndexRoute: typeof CoverageCoveragesIndexRoute
}

const CoverageCoveragesRouteRouteChildren: CoverageCoveragesRouteRouteChildren =
  {
    CoverageCoveragesCampusIdRoute: CoverageCoveragesCampusIdRoute,
    CoverageCoveragesIndexRoute: CoverageCoveragesIndexRoute,
  }

const CoverageCoveragesRouteRouteWithChildren =
  CoverageCoveragesRouteRoute._addFileChildren(
    CoverageCoveragesRouteRouteChildren,
  )

interface CoverageDepartmentsRouteRouteChildren {
  CoverageDepartmentsIndexRoute: typeof CoverageDepartmentsIndexRoute
  CoverageDepartmentsDepartmentIdTownsRoute: typeof CoverageDepartmentsDepartmentIdTownsRoute
}

const CoverageDepartmentsRouteRouteChildren: CoverageDepartmentsRouteRouteChildren =
  {
    CoverageDepartmentsIndexRoute: CoverageDepartmentsIndexRoute,
    CoverageDepartmentsDepartmentIdTownsRoute:
      CoverageDepartmentsDepartmentIdTownsRoute,
  }

const CoverageDepartmentsRouteRouteWithChildren =
  CoverageDepartmentsRouteRoute._addFileChildren(
    CoverageDepartmentsRouteRouteChildren,
  )

interface CoverageInstitutionsRouteRouteChildren {
  CoverageInstitutionsIndexRoute: typeof CoverageInstitutionsIndexRoute
  CoverageInstitutionsInstitutionIdCampusesRoute: typeof CoverageInstitutionsInstitutionIdCampusesRoute
}

const CoverageInstitutionsRouteRouteChildren: CoverageInstitutionsRouteRouteChildren =
  {
    CoverageInstitutionsIndexRoute: CoverageInstitutionsIndexRoute,
    CoverageInstitutionsInstitutionIdCampusesRoute:
      CoverageInstitutionsInstitutionIdCampusesRoute,
  }

const CoverageInstitutionsRouteRouteWithChildren =
  CoverageInstitutionsRouteRoute._addFileChildren(
    CoverageInstitutionsRouteRouteChildren,
  )

interface CoverageTownsRouteRouteChildren {
  CoverageTownsIndexRoute: typeof CoverageTownsIndexRoute
  CoverageTownsTownIdInstitutionsRoute: typeof CoverageTownsTownIdInstitutionsRoute
}

const CoverageTownsRouteRouteChildren: CoverageTownsRouteRouteChildren = {
  CoverageTownsIndexRoute: CoverageTownsIndexRoute,
  CoverageTownsTownIdInstitutionsRoute: CoverageTownsTownIdInstitutionsRoute,
}

const CoverageTownsRouteRouteWithChildren =
  CoverageTownsRouteRoute._addFileChildren(CoverageTownsRouteRouteChildren)

interface MenuCyclesRouteRouteChildren {
  MenuCyclesIndexRoute: typeof MenuCyclesIndexRoute
}

const MenuCyclesRouteRouteChildren: MenuCyclesRouteRouteChildren = {
  MenuCyclesIndexRoute: MenuCyclesIndexRoute,
}

const MenuCyclesRouteRouteWithChildren = MenuCyclesRouteRoute._addFileChildren(
  MenuCyclesRouteRouteChildren,
)

interface MenuDishesRouteRouteChildren {
  MenuDishesIndexRoute: typeof MenuDishesIndexRoute
}

const MenuDishesRouteRouteChildren: MenuDishesRouteRouteChildren = {
  MenuDishesIndexRoute: MenuDishesIndexRoute,
}

const MenuDishesRouteRouteWithChildren = MenuDishesRouteRoute._addFileChildren(
  MenuDishesRouteRouteChildren,
)

interface MenuIngredientsRouteRouteChildren {
  MenuIngredientsIndexRoute: typeof MenuIngredientsIndexRoute
}

const MenuIngredientsRouteRouteChildren: MenuIngredientsRouteRouteChildren = {
  MenuIngredientsIndexRoute: MenuIngredientsIndexRoute,
}

const MenuIngredientsRouteRouteWithChildren =
  MenuIngredientsRouteRoute._addFileChildren(MenuIngredientsRouteRouteChildren)

interface MenuSchedulesRouteRouteChildren {
  MenuSchedulesIndexRoute: typeof MenuSchedulesIndexRoute
}

const MenuSchedulesRouteRouteChildren: MenuSchedulesRouteRouteChildren = {
  MenuSchedulesIndexRoute: MenuSchedulesIndexRoute,
}

const MenuSchedulesRouteRouteWithChildren =
  MenuSchedulesRouteRoute._addFileChildren(MenuSchedulesRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  CoverageBeneficiariesRouteRoute: CoverageBeneficiariesRouteRouteWithChildren,
  CoverageCampusesRouteRoute: CoverageCampusesRouteRouteWithChildren,
  CoverageCoveragesRouteRoute: CoverageCoveragesRouteRouteWithChildren,
  CoverageDepartmentsRouteRoute: CoverageDepartmentsRouteRouteWithChildren,
  CoverageInstitutionsRouteRoute: CoverageInstitutionsRouteRouteWithChildren,
  CoverageTownsRouteRoute: CoverageTownsRouteRouteWithChildren,
  MenuCyclesRouteRoute: MenuCyclesRouteRouteWithChildren,
  MenuDishesRouteRoute: MenuDishesRouteRouteWithChildren,
  MenuIngredientsRouteRoute: MenuIngredientsRouteRouteWithChildren,
  MenuSchedulesRouteRoute: MenuSchedulesRouteRouteWithChildren,
  CoverageIndexRoute: CoverageIndexRoute,
  HrIndexRoute: HrIndexRoute,
  HrDailyAvailabilityIndexRoute: HrDailyAvailabilityIndexRoute,
  HrEmployeesIndexRoute: HrEmployeesIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
